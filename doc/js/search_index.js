var search_data = {"index":{"searchIndex":["examples","easy","object","sudoku","helpers","utils","node","strategies","hiddensingles","sudokusolver","error","utils","add_edges()","all_columns_valid?()","all_columns_valid?()","all_matrix_valid?()","all_matrix_valid?()","all_rows_valid?()","all_rows_valid?()","candidates_size()","candidates_triplets()","candidates_tuplets()","coordinates()","coordinates()","done?()","extract_mini_matrices()","extract_mini_matrices()","fill_sub_matrices()","fill_sub_matrices()","filled?()","find_all_candidates()","find_candidates()","find_neighbors()","find_neighbors()","load_matrix()","load_matrix()","new()","new()","new()","nodes_unfilled()","nodes_with_one_candidate()","only_one_candidate?()","pick()","pick_random()","print_by_column()","print_by_column()","print_by_matrix()","print_by_matrix()","print_by_row()","print_by_row()","print_sudoku()","print_sudoku()","process()","process()","process_nodes_changed()","reload!()","unfilled?()","valid_sudoku?()","valid_sudoku?()","changelog","code_of_conduct","gemfile","gemfile.lock","license","readme","rakefile","setup","sudoku_solver.gemspec"],"longSearchIndex":["examples","examples::easy","object","sudoku","sudoku::helpers","sudoku::helpers::utils","sudoku::node","sudoku::strategies","sudoku::strategies::hiddensingles","sudokusolver","sudokusolver::error","utils","sudoku#add_edges()","sudoku::helpers::utils#all_columns_valid?()","utils#all_columns_valid?()","sudoku::helpers::utils#all_matrix_valid?()","utils#all_matrix_valid?()","sudoku::helpers::utils#all_rows_valid?()","utils#all_rows_valid?()","sudoku::node#candidates_size()","sudoku::node#candidates_triplets()","sudoku::node#candidates_tuplets()","sudoku::helpers::utils#coordinates()","utils#coordinates()","sudoku::helpers::utils#done?()","sudoku::helpers::utils#extract_mini_matrices()","utils#extract_mini_matrices()","sudoku::helpers::utils#fill_sub_matrices()","utils#fill_sub_matrices()","sudoku::node#filled?()","sudoku#find_all_candidates()","sudoku#find_candidates()","sudoku::helpers::utils#find_neighbors()","utils#find_neighbors()","sudoku::helpers::utils#load_matrix()","utils#load_matrix()","sudoku::new()","sudoku::node::new()","sudoku::strategies::hiddensingles::new()","sudoku::helpers::utils#nodes_unfilled()","sudoku::strategies::hiddensingles#nodes_with_one_candidate()","sudoku::node#only_one_candidate?()","examples::easy#pick()","examples::easy#pick_random()","sudoku::helpers::utils#print_by_column()","utils#print_by_column()","sudoku::helpers::utils#print_by_matrix()","utils#print_by_matrix()","sudoku::helpers::utils#print_by_row()","utils#print_by_row()","sudoku::helpers::utils#print_sudoku()","utils#print_sudoku()","sudoku#process()","sudoku::strategies::hiddensingles#process()","sudoku#process_nodes_changed()","object#reload!()","sudoku::node#unfilled?()","sudoku::helpers::utils#valid_sudoku?()","utils#valid_sudoku?()","","","","","","","","",""],"info":[["Examples","","Examples.html","",""],["Examples::Easy","","Examples/Easy.html","",""],["Object","","Object.html","",""],["Sudoku","","Sudoku.html","","<p>hidden_singles.rb\n"],["Sudoku::Helpers","","Sudoku/Helpers.html","",""],["Sudoku::Helpers::Utils","","Sudoku/Helpers/Utils.html","",""],["Sudoku::Node","","Sudoku/Node.html","",""],["Sudoku::Strategies","","Sudoku/Strategies.html","",""],["Sudoku::Strategies::HiddenSingles","","Sudoku/Strategies/HiddenSingles.html","","<p>HiddenSingles class\n<p>It determines if a candidate value for a cell is the last option available on: a matrix, …\n"],["SudokuSolver","","SudokuSolver.html","",""],["SudokuSolver::Error","","SudokuSolver/Error.html","",""],["Utils","","Utils.html","",""],["add_edges","Sudoku","Sudoku.html#method-i-add_edges","(values)",""],["all_columns_valid?","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-all_columns_valid-3F","()",""],["all_columns_valid?","Utils","Utils.html#method-i-all_columns_valid-3F","()",""],["all_matrix_valid?","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-all_matrix_valid-3F","()",""],["all_matrix_valid?","Utils","Utils.html#method-i-all_matrix_valid-3F","()",""],["all_rows_valid?","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-all_rows_valid-3F","()",""],["all_rows_valid?","Utils","Utils.html#method-i-all_rows_valid-3F","()",""],["candidates_size","Sudoku::Node","Sudoku/Node.html#method-i-candidates_size","()",""],["candidates_triplets","Sudoku::Node","Sudoku/Node.html#method-i-candidates_triplets","()",""],["candidates_tuplets","Sudoku::Node","Sudoku/Node.html#method-i-candidates_tuplets","()",""],["coordinates","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-coordinates","(value)",""],["coordinates","Utils","Utils.html#method-i-coordinates","(value)",""],["done?","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-done-3F","()",""],["extract_mini_matrices","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-extract_mini_matrices","(i, j)",""],["extract_mini_matrices","Utils","Utils.html#method-i-extract_mini_matrices","(i, j)",""],["fill_sub_matrices","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-fill_sub_matrices","()",""],["fill_sub_matrices","Utils","Utils.html#method-i-fill_sub_matrices","()",""],["filled?","Sudoku::Node","Sudoku/Node.html#method-i-filled-3F","()",""],["find_all_candidates","Sudoku","Sudoku.html#method-i-find_all_candidates","()",""],["find_candidates","Sudoku","Sudoku.html#method-i-find_candidates","(node)",""],["find_neighbors","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-find_neighbors","(value)",""],["find_neighbors","Utils","Utils.html#method-i-find_neighbors","(value)",""],["load_matrix","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-load_matrix","()",""],["load_matrix","Utils","Utils.html#method-i-load_matrix","()",""],["new","Sudoku","Sudoku.html#method-c-new","(values)",""],["new","Sudoku::Node","Sudoku/Node.html#method-c-new","(id, value = 0)",""],["new","Sudoku::Strategies::HiddenSingles","Sudoku/Strategies/HiddenSingles.html#method-c-new","(game)","<p>@param game [Sudoku]\n"],["nodes_unfilled","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-nodes_unfilled","()",""],["nodes_with_one_candidate","Sudoku::Strategies::HiddenSingles","Sudoku/Strategies/HiddenSingles.html#method-i-nodes_with_one_candidate","()","<p>@return [Sudoku::Node] nodes which have only one candidate available\n"],["only_one_candidate?","Sudoku::Node","Sudoku/Node.html#method-i-only_one_candidate-3F","()",""],["pick","Examples::Easy","Examples/Easy.html#method-i-pick","(n)",""],["pick_random","Examples::Easy","Examples/Easy.html#method-i-pick_random","()",""],["print_by_column","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-print_by_column","()",""],["print_by_column","Utils","Utils.html#method-i-print_by_column","()",""],["print_by_matrix","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-print_by_matrix","()",""],["print_by_matrix","Utils","Utils.html#method-i-print_by_matrix","()",""],["print_by_row","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-print_by_row","()",""],["print_by_row","Utils","Utils.html#method-i-print_by_row","()",""],["print_sudoku","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-print_sudoku","()",""],["print_sudoku","Utils","Utils.html#method-i-print_sudoku","()",""],["process","Sudoku","Sudoku.html#method-i-process","()",""],["process","Sudoku::Strategies::HiddenSingles","Sudoku/Strategies/HiddenSingles.html#method-i-process","()","<p>It traverses all nodes with one candidate and changes the current value with the only candidate available …\n"],["process_nodes_changed","Sudoku","Sudoku.html#method-i-process_nodes_changed","()",""],["reload!","Object","Object.html#method-i-reload-21","(print = true)","<p>(If you use this, don&#39;t forget to add pry to your Gemfile!) require “pry” Pry.start\n"],["unfilled?","Sudoku::Node","Sudoku/Node.html#method-i-unfilled-3F","()",""],["valid_sudoku?","Sudoku::Helpers::Utils","Sudoku/Helpers/Utils.html#method-i-valid_sudoku-3F","()",""],["valid_sudoku?","Utils","Utils.html#method-i-valid_sudoku-3F","()",""],["CHANGELOG","","CHANGELOG_md.html","","<p>[Unreleased]\n<p>[0.1.0] - 2022-06-19\n<p>Initial release\n"],["CODE_OF_CONDUCT","","CODE_OF_CONDUCT_md.html","","<p>Contributor Covenant Code of Conduct\n<p>Our Pledge\n<p>We as members, contributors, and leaders pledge to make …\n"],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  sudoku_solver (0.1.0)</pre>\n<p>GEM\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2022 Andres Martinez G\n<p>Permission is hereby granted, free of charge, …\n"],["README","","README_md.html","","<p>SudokuSolver\n<p>Welcome to your new gem! In this directory, you&#39;ll find the files you need to be able …\n"],["Rakefile","","Rakefile.html","","<p># frozen_string_literal: true\n<p>require “bundler/gem_tasks” require “rspec/core/rake_task” …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["sudoku_solver.gemspec","","sudoku_solver_gemspec.html","","<p># frozen_string_literal: true\n<p>require_relative “lib/sudoku_solver/version”\n<p>Gem::Specification.new …\n"]]}}